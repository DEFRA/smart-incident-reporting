# ADO Pipeline for smart-incident-reporting
# preliminary pipeline is as follows
# Automatically trigger on merge to main and develop
# # Deploy develop to DEV1
# # Deploy main to TST1
# Manually allow build against feature branch or any branch selected in drop down
# Currently only DEV1 exists so just deploy to DEV1 for main & develop
trigger:
- main # TODO if main deploy to TST1 automatically
- develop # TODO if develop deploy to DEV1 automatically

pool:
  vmImage: ubuntu-latest

steps:
- script: |
    NPM_VERSION=$(node -p "require('./package.json').version")
    echo ${NPM_VERSION}
    echo "##vso[task.setvariable variable=TAG;]${NPM_VERSION}"
  displayName: 'Get package.json npm version'

- script: |
    echo $(TAG)
    docker-compose -f docker/service.yml build
    docker image ls
  displayName: 'Create Docker image'

- task: AzureCLI@2
  displayName: 'Push image to container registry'
  inputs:
    azureSubscription: $(AZURE_SUBSCRIPTION)
    scriptType: bash
    scriptLocation: inlineScript
    inlineScript: |
      az acr login --name $(CONTAINER_REGISTRY)
      docker image ls
      docker image tag $(CONTAINER_APP_NAME):$(TAG) $(CONTAINER_REGISTRY)/$(CONTAINER_APP_NAME):$(TAG)
      docker image ls
      docker push $(CONTAINER_REGISTRY)/$(CONTAINER_APP_NAME):$(TAG)

- task: AzureWebAppContainer@1
  displayName: 'Azure Web App on Container Deploy: $(CONTAINER_APP_NAME)'
  inputs:
    azureSubscription: $(AZURE_SUBSCRIPTION)
    appName: $(WEB_APP_NAME)
    containers: $(CONTAINER_REGISTRY)/$(CONTAINER_APP_NAME):$(TAG)
    
- task: Delay@1
  displayName: Wait 1 minute for application to update fully
  inputs:
   delayForMinutes: 1

- script: |
    git clone https://github.com/DEFRA/smart-incident-reporting-ui-tests
    cd smart-incident-reporting-ui-tests
    git checkout feature/mvp-thin-slice
    npm i
    npm run test

- task: PublishTestResults@2
  displayName: 'Publish test results **/TEST-*.xml'
  inputs:
   testResultsFormat: 'JUnit'
   testResultsFiles: '**/TEST-*.xml'
   searchFolder: '$(System.DefaultWorkingDirectory)'
  condition: succeededOrFailed()