# ADO Pipeline for smart-incident-reporting
# preliminary pipeline is as follows
# Automatically trigger on merge to main and develop
# # Deploy develop to DEV1
# # Deploy main to TST1
# Manually allow build against feature branch or any branch selected in drop down
# Currently only DEV1 exists so just deploy to DEV1 for main & develop
trigger:
- main # TODO if main deploy to TST1 automatically
- develop # TODO if develop deploy to DEV1 automatically

pool:
  name: $(POOL_NAME)

steps:
- script: |
    NPM_VERSION=$(node -p "require('./package.json').version")
    echo ${NPM_VERSION}
    echo "##vso[task.setvariable variable=TAG;]${NPM_VERSION}"
  displayName: 'Get package.json npm version'

- script: |
    HOST_IP=$(curl ipinfo.io/ip)
    echo ${HOST_IP}
    echo "##vso[task.setvariable variable=HOST_IP;]${HOST_IP}"
  displayName: 'Get IP address for DevOps host'

# - task: AzureCLI@2
#   displayName: 'Allow accesses for DevOps Host'
#   inputs:
#     azureSubscription: $(AZURE_SUBSCRIPTION)
#     scriptType: bash
#     scriptLocation: inlineScript
#     inlineScript: |
#       az acr update --name $(CONTAINER_REGISTRY) --public-network-enabled true
#       az acr network-rule add --name $(CONTAINER_REGISTRY) --ip-address $(HOST_IP)
#       az webapp config access-restriction add --resource-group $(RESOURCE_GROUP) --name $(WEB_APP_NAME) \
#       --rule-name 'Allow SIRP DevOps' --action Allow --ip-address $(HOST_IP) --priority 400

- script: |
    echo $(TAG)
    echo $(GA_ID)
    docker-compose -f docker/service.yml build
    docker image ls
  displayName: 'Create Docker image'

- task: AzureCLI@2
  displayName: 'Push image to container registry'
  inputs:
    azureSubscription: $(AZURE_SUBSCRIPTION)
    scriptType: bash
    scriptLocation: inlineScript
    inlineScript: |
      az acr login --name $(CONTAINER_REGISTRY)
      docker image ls
      docker image tag $(CONTAINER_APP_NAME):$(TAG) $(CONTAINER_REGISTRY)/$(CONTAINER_APP_NAME):$(TAG)
      docker image ls
      docker push $(CONTAINER_REGISTRY)/$(CONTAINER_APP_NAME):$(TAG)

- task: AzureWebAppContainer@1
  displayName: 'Azure Web App on Container Deploy: $(CONTAINER_APP_NAME)'
  inputs:
    azureSubscription: $(AZURE_SUBSCRIPTION)
    appName: $(WEB_APP_NAME)
    containers: $(CONTAINER_REGISTRY)/$(CONTAINER_APP_NAME):$(TAG)
    
- powershell: |
    Start-Sleep -Seconds 60
  displayName: 'Powershell script to wait for 1 minute'

- script: |
    curl -s -X GET $(SERVICE_URL)
    if [ $? -ne 0 ]; then
      echo "Failed to get Service"
      exit 1
    fi
  displayName: 'Curl Service URL to ensure service running'

- script: |
    git clone https://$(GITHUB_PAT)@github.com/DEFRA/smart-incident-reporting-ui-tests.git
    cd smart-incident-reporting-ui-tests
    git checkout $(E2E_TEST_BRANCH)
    npm i
    npm run test-headless
  displayName: 'Execute E2E automated feature tests'

- task: PublishTestResults@2
  displayName: 'Publish test results **/TEST-*.xml'
  inputs:
   testResultsFormat: 'JUnit'
   testResultsFiles: '**/TEST-*.xml'
   searchFolder: '$(System.DefaultWorkingDirectory)'
  condition: succeededOrFailed()

# - task: AzureCLI@2
#   displayName: 'Remove allow accesses for DevOps Host'
#   inputs:
#     azureSubscription: $(AZURE_SUBSCRIPTION)
#     scriptType: bash
#     scriptLocation: inlineScript
#     inlineScript: |
#       az acr network-rule remove --name $(CONTAINER_REGISTRY) --ip-address $(HOST_IP)
#       az acr update --name $(CONTAINER_REGISTRY) --public-network-enabled false
#       az webapp config access-restriction remove --resource-group $(RESOURCE_GROUP) --name $(WEB_APP_NAME) \
#       --rule-name 'Allow SIRP DevOps'
#   condition: succeededOrFailed()